#!/bin/sh

# Usage: mqtt-grep-color -e expr -h host -d -t topic  othermosquittoopts
# subscribe to the MQTT "topic" (Default: #) and colorize it, optionally grepping for "expr"

# shellcheck shell=ash        # prefer ash, since it is preferred on OpenWrt

# License: GNU General Public License v3.0
# For more information see project "mqtt-grep-color" on GitHub.

set -o noglob     # file name globbing is neither needed or nor wanted
set -f
set -o noclobber  # disable for security reasons

### prepare settings and helpers such as stdbuf ###

stdbufcmd=""
stdbufcmd_tr=$( command -v stdbuf ) && stdbufcmd_tr="$stdbufcmd_tr --output=L" # use stdbuf for tr if available

# colors from https://askubuntu.com/questions/1042234/modifying-the-color-of-grep :
yellow="01;33"; red="01;31"; green="01;32"; blue="01;34" ; purple="01;35"

# settings for BusyBox grep - it cannot colorize. And the option line-buffered is also missing.
{ grep --help 2>&1 | grep -q BusyBox ; } && BUSYBOX="yes" && stdbufcmd="$stdbufcmd_tr" # ... and stdbuf also for grep if on BusyBox

if [ "$BUSYBOX" ] 
then
    # I'm on BusyBox
    grepexp="[\}{ ]|\[\]|\[\{|\}\]" # { must be escaped
    # colorizes  }{, etc. if no other grep expression given; space must be there!
    [ -z "$stdbufcmd_tr" ] && echo "$0: Warning: Install stdbuf for better line buffering! (Package coreutils-stdbuf on OpenWrt)" 1>&2
else
    # Not on BusyBox
    grepexp="[\}{ ]|\[\]|\[{|\}\]"  # { must NOT be escaped
    GREPOPTS="--text --color=always --line-buffered"
    [ -z "$stdbufcmd_tr" ] && echo "$0: Warning: Install stdbuf for better line buffering!" 1>&2
fi

command -v mosquitto_sub > /dev/null || { echo "$0: Error: Install mosquitto_sub first, e.g. from mosquitto-client-nossl" 1>&2 ; exit 1 ;  }

topic="#"         # use '#' as MQTT topic, if nothing else given
mqtthost="-v"     # use "-v" to make sure mqtthost is not an empty option
noretained="-v"     # use "-v" to make sure mqtthost is not an empty option
maxcount="-v"     # use "-v" to make sure mqtthost is not an empty option
awkTimeFormat="%H:%M:%S"
awkTimeLen=8            # for "hh:mm:ss"
scriptname="${0##*/}"

### process command line options ###

while getopts "?e:h:t:RC:sdx" opt      
do
    case "$opt" in
    \?) echo "Usage: $scriptname -e expr -h host -d -t topic  othermosquittoopts" 1>&2
        exit 1
        ;;
    e)  grepexp="$OPTARG"
		;;
    h)  mqtthost="$OPTARG" # configure broker host here or in $HOME/.config/mosquitto_sub
        if [ "$mqtthost" = "test" ] ; then
            mqtthost="-h test.mosquitto.org"
        else
            mqtthost="-h $( echo $mqtthost | tr -d ':()"^%$ \r\000-\011\013-\037')" # clean up for sec purposes
        fi
        ;;
    t)  topic=$( echo "$OPTARG" | sed -e 's:/$:/\#:' ) # as a service add \# to a trailing /
        ;;
    R)  noretained="-R"
        ;;
    C)  maxcount="-C $( echo "$OPTARG" | tr -d 'a-zA-Z\r\000-\011\013-\037' )" # clean up for sec purposes
        ;;
    s)  awkTimeFormat="%s"
        awkTimeLen=3 # not used yet
        ;;
    d|x)  set -x # turn on shell debugging from here on
        ;;
    esac
done

shift "$((OPTIND-1))"   # Discard options processed by getopts, remaining options will be passed to mosquitto_sub

### do the real stuff from here ###

# These are the following four steps for processing the MQTT stream: 0. remove any non-printable stuff, 1. color the topic red,
# 2. put the time in front, 3. color the time, 4. color the optional expression or curly brackets etc by default.
# N.B. No double quotes around ""
# N.B. very ugly hack with XXshouldbetopicXX to mark a typical MQTT topic, need to factorize that!

  mosquitto_sub $mqtthost -v -t "$topic" "$noretained" $maxcount  "$@"    \
|                   $stdbufcmd_tr  sed -e 's/[^[:print:]]//g' -e 's:^\([a-zA-Z0-9$_+-]*/[/a-zA-Z0-9$_+-]*\) :\1XXshouldbeTopicXX :'   -e 's/^\([a-zA-Z0-9$_+-]+\) /\1XXshouldbetopicXX /' -e 's/$/ /'  \
| GREP_COLOR="$red"    $stdbufcmd  grep $GREPOPTS -E -e '[^ ]+XXshouldbeTopicXX| '    \
| awk -v timeLen="$awkTimeLen" -v timeFormat="$awkTimeFormat" -e '{ print ($0 ~ /XXshouldbeTopicXX/ ? "XXshouldbeTimeXX" strftime(timeFormat " ") : "" ) $0 ; fflush() } '     \
| GREP_COLOR="$yellow" $stdbufcmd  grep $GREPOPTS -E -e ' |^XXshouldbeTimeXX[0-9:]+'   \
|                   $stdbufcmd_tr  sed -e 's/XXshouldbeTimeXX//g' -e 's/XXshouldbeTopicXX//'    \
| GREP_COLOR="$green"  $stdbufcmd  grep $GREPOPTS -E -e "$grepexp"    \
| GREP_COLOR="$blue"   $stdbufcmd  grep $GREPOPTS -E -e " |,"         \
;
